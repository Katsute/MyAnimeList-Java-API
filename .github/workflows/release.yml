name: Deploy

on:
  release:
    types: [published]

jobs:
  build:
    name: Compile (Java ${{ matrix.jdk }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        jdk: [8, 9, 11, 16]
      fail-fast: false
    steps:
      - name: 📤 Checkout Repository
        uses: actions/checkout@v2.3.4

      - name: ☕ Install Java
        uses: actions/setup-java@v2.3.0
        if: matrix.jdk != '9'
        with:
          architecture: x64
          distribution: temurin
          java-version: ${{ matrix.jdk }}
          cache: maven

      - name: 📚 Install OpenJDK
        uses: AdoptOpenJDK/install-jdk@v1.1.1
        if: matrix.jdk == '9'
        with:
          version: ${{ matrix.jdk }}
          architecture: x64

      - name: 📤 Load Cache
        uses: actions/cache@v2.1.6
        if: matrix.jdk == '9'
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: ✔ Compile with Maven
        run: mvn compile -DskipTests --no-transfer-progress

  codeql:
    name: CodeQL (Java ${{ matrix.jdk }})
    runs-on: ubuntu-latest
    needs: build
    if: github.event == 'pull_request' || github.actor != 'dependabot[bot]'
    strategy:
      matrix:
        jdk: [11]
      fail-fast: false
    steps:
      - name: 📤 Checkout Repository
        uses: actions/checkout@v2.3.4

      - name: 📚 Install CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: java

      - name: ☕ Install Java
        uses: actions/setup-java@v2.3.0
        with:
          architecture: x64
          distribution: temurin
          java-version: ${{ matrix.jdk }}
          cache: maven

      - name: ✔ Compile with Maven
        run: mvn compile -DskipTests --no-transfer-progress

      - name: ✔ Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1

  test:
    name: Test (Java ${{ matrix.jdk }})
    runs-on: ubuntu-latest
    needs: codeql
    strategy:
      matrix:
        jdk: [8, 9, 11, 16]
      fail-fast: false
    steps:
      - name: 📤 Checkout Repository
        uses: actions/checkout@v2.3.4

      - name: ☕ Install Java
        uses: actions/setup-java@v2.3.0
        if: matrix.jdk != '9'
        with:
          architecture: x64
          distribution: temurin
          java-version: ${{ matrix.jdk }}
          cache: maven

      - name: 📚 Install OpenJDK
        uses: AdoptOpenJDK/install-jdk@v1.1.1
        if: matrix.jdk == '9'
        with:
          version: ${{ matrix.jdk }}
          architecture: x64

      - name: 📤 Load Cache
        uses: actions/cache@v2.1.6
        if: matrix.jdk == '9'
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: ✔ Test with Maven
        run: mvn test -fae --no-transfer-progress

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: Maven Central
    needs: test
    steps:
      - name: 📤 Checkout Repository
        uses: actions/checkout@v2.3.4

      - name: 🔐 Import GPG key
        uses: crazy-max/ghaction-import-gpg@v3.2.0
        with:
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: ☕ Install Java
        uses: actions/setup-java@v2.3.0
        with:
          architecture: x64
          distribution: temurin
          java-version: 11

      - name: 🚀 Deploy to Maven
        run: mvn -B deploy -f pom.xml -s settings.xml -P deploy
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}

      - name: 🚀 Deploy to Releases
        uses: AButler/upload-release-assets@v2.0
        with:
          files: 'target/*.jar'
          repo-token: ${{ secrets.GITHUB_TOKEN }}